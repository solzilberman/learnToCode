{"version":3,"sources":["logo.svg","components/Content.js","components/Options.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","a11yProps","index","id","TabPanel","props","children","value","other","role","hidden","aria-labelledby","Box","p","Typography","useStyles","makeStyles","root","flexGrow","Content","classes","React","useState","setValue","Paper","elevation","style","width","margin","square","className","Tabs","onChange","event","newValue","variant","indicatorColor","textColor","aria-label","Tab","icon","Options","state","category","language","level","step","nextStep","setState","prevStep","this","steps","minHeight","marginBottom","Stepper","activeStep","alternativeLabel","map","label","Step","key","StepLabel","display","flexFlow","height","justifyContent","onClick","Fab","color","size","console","log","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.24d5a0a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react'\r\nimport { Paper, Typography, AppBar, Tabs, Tab, Box, makeStyles } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport PersonPinIcon from '@material-ui/icons/PersonPin';\r\n\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        'aria-controls': `simple-tabpanel-${index}`,\r\n    };\r\n}\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n\r\n    },\r\n});\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default function Content() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <Paper elevation={3}>\r\n                <Paper style={{ width: '100%', margin: 'auto' }} square className={classes.root}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        variant=\"fullWidth\"\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        aria-label=\"icon tabs example\"\r\n                    >\r\n\r\n\r\n                        <Tab icon={<VideocamIcon />} aria-label=\"video\" {...a11yProps(0)} />\r\n                        <Tab icon={<DescriptionIcon />} aria-label=\"article\" {...a11yProps(1)} />\r\n                        <Tab icon={<PersonPinIcon />} aria-label=\"person\"  {...a11yProps(2)} />\r\n                    </Tabs>\r\n\r\n                </Paper>\r\n                <TabPanel value={value} index={0}>\r\n                    Item One\r\n      </TabPanel>\r\n                <TabPanel value={value} index={1}>\r\n                    Item Two\r\n      </TabPanel>\r\n                <TabPanel value={value} index={2}>\r\n                    Item Three\r\n      </TabPanel>\r\n            </Paper>\r\n        </div >\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Content from './Content';\r\nimport { Fab, Stepper, Step, StepLabel } from '@material-ui/core';\r\nexport class Options extends Component {\r\n    state = {\r\n        category: '',\r\n        language: '',\r\n        level: '',\r\n        step: 0\r\n    }\r\n\r\n    nextStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step + 1\r\n        })\r\n    }\r\n\r\n    prevStep = () => {\r\n        const { step } = this.state;\r\n        this.setState({\r\n            step: step - 1\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { step, category, language, level } = this.state;\r\n        const values = { category, language, level };\r\n        const steps = ['Select a Category...', 'Select a Language...', 'Select your level...'];\r\n\r\n        switch (step) {\r\n            case 0:\r\n                return (\r\n                    <div style={{ minHeight: '100%' }}>\r\n                        <div style={{ marginBottom: '10%' }}>\r\n                            <Stepper activeStep={0} alternativeLabel>\r\n                                {steps.map((label) => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexFlow: 'column', height: '100%', justifyContent: 'space-evenly' }}>\r\n\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ category: \"Web Development\" })} value=\"Python\" color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Web Development\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={() => console.log(\"Coming Soon...\")}>\r\n                                <Fab onClick={() => this.setState({ category: \"Other\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Coming Soon ...\r\n                            </Fab>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 1:\r\n                return (\r\n                    <div style={{ minHeight: '100%' }}>\r\n                        <div style={{ marginBottom: '10%' }}>\r\n                            <Stepper activeStep={1} alternativeLabel>\r\n                                {steps.map((label) => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexFlow: 'column', height: '100%', justifyContent: 'space-evenly' }}>\r\n\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ language: \"Python\" })} value=\"Python\" color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Python\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ language: \"JavaScript\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    JavaScript\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ language: \"Java\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Java\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ level: \"C\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    C\r\n                            </Fab>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <div style={{ marginBottom: '10%' }}>\r\n                            <Stepper activeStep={2} alternativeLabel>\r\n                                {steps.map((label) => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                        </div>\r\n                        <div style={{ display: 'flex', flexFlow: 'column', height: '100%', justifyContent: 'space-evenly' }}>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ level: \"Basic\" })} value=\"Python\" color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Basic\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ level: \"Intermediate\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Intermediate\r\n                            </Fab>\r\n                            </div>\r\n                            <div style={{ marginBottom: '20px' }} onClick={this.nextStep}>\r\n                                <Fab onClick={() => this.setState({ level: \"Advanced\" })} color=\"primary\" size=\"large\" variant=\"extended\">\r\n                                    Advanced\r\n                            </Fab>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <h2>{`${category} in ${language} at a ${level} level`}</h2>\r\n                        <Content />\r\n                    </div>\r\n                )\r\n\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default Options\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Options from './components/Options'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Options />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}